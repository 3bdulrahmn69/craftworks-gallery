import {
  FiLock,
  FiUsers,
  FiBriefcase,
  FiDollarSign,
  FiMessageCircle,
  FiCreditCard,
  FiSettings,
} from 'react-icons/fi';

export const apiRoutes = {
  authentication: {
    title: 'Authentication',
    description: 'Secure user authentication and authorization with JWT tokens',
    baseUrl: '/api/auth',
    icon: FiLock,
    color: 'from-red-500 to-pink-500',
    totalEndpoints: 9,
    routes: [
      {
        method: 'POST',
        path: '/register/client',
        description: 'Register new client account with email validation',
        category: 'Registration',
        requiresAuth: false,
        parameters: ['email', 'password', 'fullName', 'phone'],
      },
      {
        method: 'POST',
        path: '/register/craftsman',
        description: 'Register new craftsman account with service selection',
        category: 'Registration',
        requiresAuth: false,
        parameters: ['email', 'password', 'fullName', 'phone', 'service'],
      },
      {
        method: 'POST',
        path: '/login/email',
        description: 'Login with email credentials (clients & craftsmen)',
        category: 'Authentication',
        requiresAuth: false,
        parameters: ['email', 'password', 'type'],
      },
      {
        method: 'POST',
        path: '/login/phone',
        description: 'Login with phone number (alternative method)',
        category: 'Authentication',
        requiresAuth: false,
        parameters: ['phone', 'password', 'type'],
      },
      {
        method: 'POST',
        path: '/login/admin',
        description: 'Administrative login with enhanced security',
        category: 'Admin',
        requiresAuth: false,
        parameters: ['email', 'password', 'type'],
      },
      {
        method: 'POST',
        path: '/forgot-password',
        description: 'Request password reset via email',
        category: 'Recovery',
        requiresAuth: false,
        parameters: ['email'],
      },
      {
        method: 'POST',
        path: '/reset-password',
        description: 'Reset password with token verification',
        category: 'Recovery',
        requiresAuth: false,
        parameters: ['token', 'newPassword'],
      },
      {
        method: 'POST',
        path: '/logout',
        description: 'Secure logout with token invalidation',
        category: 'Session',
        requiresAuth: true,
        parameters: [],
      },
      {
        method: 'PATCH',
        path: '/change-password',
        description: 'Change password for authenticated users',
        category: 'Security',
        requiresAuth: true,
        parameters: ['currentPassword', 'newPassword'],
      },
    ],
  },
  users: {
    title: 'Users',
    description: 'User profile management, verification, and social features',
    baseUrl: '/api/users',
    icon: FiUsers,
    color: 'from-blue-500 to-indigo-500',
    totalEndpoints: 12,
    routes: [
      {
        method: 'GET',
        path: '/me',
        description: 'Get current user complete profile',
        category: 'Profile',
        requiresAuth: true,
      },
      {
        method: 'PATCH',
        path: '/me',
        description: 'Update user profile',
        category: 'Profile',
        requiresAuth: true,
        parameters: ['fullName', 'phone', 'address', 'bio'],
      },
      {
        method: 'DELETE',
        path: '/me/profile-picture',
        description: 'Remove profile picture from account',
        category: 'Profile',
        requiresAuth: true,
        parameters: [],
      },
      {
        method: 'GET',
        path: '/:id',
        description: 'Get public profile with verification status',
        category: 'Public',
        requiresAuth: false,
        parameters: ['id'],
      },
      {
        method: 'POST',
        path: '/craftsman/verification',
        description: 'Submit verification documents (up to 10 files)',
        category: 'Verification',
        requiresAuth: true,
        parameters: ['verificationDocs', 'docNames', 'docTypes'],
      },
      {
        method: 'POST',
        path: '/craftsman/verification-legacy',
        description: 'Submit verification (JSON format)',
        category: 'Verification',
        requiresAuth: true,
        parameters: ['skills', 'bio', 'portfolioImages'],
      },
      {
        method: 'GET',
        path: '/recommendations',
        description: 'Get AI-recommended craftsmen for jobs',
        category: 'Discovery',
        requiresAuth: true,
        parameters: ['jobId', 'serviceType'],
      },
      {
        method: 'GET',
        path: '/search',
        description: 'Advanced search with filters and location',
        category: 'Discovery',
        requiresAuth: false,
        parameters: ['query', 'service', 'location', 'rating'],
      },
      {
        method: 'GET',
        path: '/nearby',
        description: 'Find nearby craftsmen with geolocation',
        category: 'Discovery',
        requiresAuth: true,
        parameters: ['latitude', 'longitude', 'radius'],
      },
      {
        method: 'POST',
        path: '/follow/:id',
        description: 'Follow/unfollow users (toggle)',
        category: 'Social',
        requiresAuth: true,
        parameters: ['id'],
      },
      {
        method: 'GET',
        path: '/followers/:id',
        description: 'Get user followers list with pagination',
        category: 'Social',
        requiresAuth: false,
        parameters: ['id', 'page', 'limit'],
      },
      {
        method: 'GET',
        path: '/following/:id',
        description: 'Get users following list with pagination',
        category: 'Social',
        requiresAuth: false,
        parameters: ['id', 'page', 'limit'],
      },
    ],
  },
  jobs: {
    title: 'Jobs',
    description:
      'Comprehensive job management with enhanced search and workflow',
    baseUrl: '/api/jobs',
    icon: FiBriefcase,
    color: 'from-green-500 to-emerald-500',
    totalEndpoints: 12,
    routes: [
      {
        method: 'POST',
        path: '/',
        description: 'Create job posting with images and location',
        category: 'Management',
        requiresAuth: true,
        parameters: ['title', 'description', 'service', 'location', 'images'],
      },
      {
        method: 'GET',
        path: '/',
        description: 'List jobs with advanced filtering and search',
        category: 'Discovery',
        requiresAuth: false,
        parameters: ['service', 'location', 'status', 'dateRange'],
      },
      {
        method: 'GET',
        path: '/my-jobs',
        description: 'Get user-specific jobs (posted or hired)',
        category: 'Personal',
        requiresAuth: true,
        parameters: ['status', 'type'],
      },
      {
        method: 'GET',
        path: '/:id',
        description: 'Get detailed job information with applicants',
        category: 'Details',
        requiresAuth: false,
        parameters: ['id'],
      },
      {
        method: 'PATCH',
        path: '/:id',
        description: 'Update job details (client only)',
        category: 'Management',
        requiresAuth: true,
        parameters: ['id', 'title', 'description', 'location'],
      },
      {
        method: 'DELETE',
        path: '/:id',
        description: 'Cancel/delete job posting',
        category: 'Management',
        requiresAuth: true,
        parameters: ['id'],
      },
      {
        method: 'POST',
        path: '/:id/hire',
        description: 'Hire craftsman for job (payment processing)',
        category: 'Workflow',
        requiresAuth: true,
        parameters: ['id', 'craftsmanId', 'quoteId'],
      },
      {
        method: 'POST',
        path: '/:id/complete',
        description: 'Mark job as completed (automatic payment)',
        category: 'Workflow',
        requiresAuth: true,
        parameters: ['id', 'completionNotes'],
      },
      {
        method: 'POST',
        path: '/:id/cancel',
        description: 'Cancel ongoing job with reason',
        category: 'Workflow',
        requiresAuth: true,
        parameters: ['id', 'reason'],
      },
      {
        method: 'GET',
        path: '/:id/applications',
        description: 'Get all job applications with craftsman details',
        category: 'Applications',
        requiresAuth: true,
        parameters: ['id'],
      },
      {
        method: 'POST',
        path: '/:id/apply',
        description: 'Apply for job (craftsman only)',
        category: 'Applications',
        requiresAuth: true,
        parameters: ['id', 'proposal', 'estimatedDuration'],
      },
      {
        method: 'GET',
        path: '/search/advanced',
        description: 'Advanced job search with machine learning',
        category: 'Discovery',
        requiresAuth: false,
        parameters: ['query', 'filters', 'sortBy', 'location'],
      },
    ],
  },
  quotes: {
    title: 'Quotes',
    description: 'Price quotation system with duration tracking and bidding',
    baseUrl: '/api/quotes',
    icon: FiDollarSign,
    color: 'from-yellow-500 to-orange-500',
    totalEndpoints: 9,
    routes: [
      {
        method: 'POST',
        path: '/jobs/:jobId',
        description: 'Submit price quote with duration estimate',
        category: 'Bidding',
        requiresAuth: true,
        parameters: ['jobId', 'price', 'duration', 'description'],
      },
      {
        method: 'GET',
        path: '/jobs/:jobId',
        description: 'Get all quotes for specific job',
        category: 'Review',
        requiresAuth: true,
        parameters: ['jobId'],
      },
      {
        method: 'POST',
        path: '/:quoteId/accept',
        description: 'Accept quote and proceed to hiring',
        category: 'Decision',
        requiresAuth: true,
        parameters: ['quoteId', 'paymentMethod'],
      },
      {
        method: 'POST',
        path: '/:quoteId/reject',
        description: 'Reject quote with optional feedback',
        category: 'Decision',
        requiresAuth: true,
        parameters: ['quoteId', 'reason'],
      },
      {
        method: 'PATCH',
        path: '/:quoteId',
        description: 'Update quote details (before acceptance)',
        category: 'Management',
        requiresAuth: true,
        parameters: ['quoteId', 'price', 'duration', 'description'],
      },
      {
        method: 'DELETE',
        path: '/:quoteId',
        description: 'Withdraw quote (craftsman only)',
        category: 'Management',
        requiresAuth: true,
        parameters: ['quoteId'],
      },
      {
        method: 'GET',
        path: '/my-quotes',
        description: 'Get craftsman submitted quotes with status',
        category: 'Personal',
        requiresAuth: true,
        parameters: ['status', 'page'],
      },
      {
        method: 'POST',
        path: '/:quoteId/negotiate',
        description: 'Negotiate quote terms (client-craftsman)',
        category: 'Negotiation',
        requiresAuth: true,
        parameters: ['quoteId', 'counterOffer', 'message'],
      },
      {
        method: 'GET',
        path: '/statistics',
        description: 'Get quote statistics and market rates',
        category: 'Analytics',
        requiresAuth: true,
        parameters: ['service', 'location'],
      },
    ],
  },
  chat: {
    title: 'Real-time Chat',
    description:
      'Socket.IO powered messaging with media sharing and moderation',
    baseUrl: '/api/chat',
    icon: FiMessageCircle,
    color: 'from-blue-500 to-purple-500',
    totalEndpoints: 9,
    routes: [
      {
        method: 'POST',
        path: '/create',
        description: 'Create new chat between client and craftsman',
        category: 'Management',
        requiresAuth: true,
        parameters: ['participantId', 'jobId'],
      },
      {
        method: 'GET',
        path: '/my-chats',
        description: 'Get user chats with last message preview',
        category: 'Management',
        requiresAuth: true,
        parameters: ['page', 'limit'],
      },
      {
        method: 'GET',
        path: '/:chatId',
        description: 'Get chat details and participant info',
        category: 'Details',
        requiresAuth: true,
        parameters: ['chatId'],
      },
      {
        method: 'GET',
        path: '/:chatId/messages',
        description: 'Get chat messages with pagination',
        category: 'Messages',
        requiresAuth: true,
        parameters: ['chatId', 'page', 'limit'],
      },
      {
        method: 'POST',
        path: '/:chatId/message',
        description: 'Send text message (HTTP fallback)',
        category: 'Messages',
        requiresAuth: true,
        parameters: ['chatId', 'content'],
      },
      {
        method: 'POST',
        path: '/:chatId/image',
        description: 'Send image message with upload',
        category: 'Messages',
        requiresAuth: true,
        parameters: ['chatId', 'image'],
      },
      {
        method: 'PATCH',
        path: '/messages/:messageId/read',
        description: 'Mark messages as read',
        category: 'Status',
        requiresAuth: true,
        parameters: ['messageId'],
      },
      {
        method: 'DELETE',
        path: '/messages/:messageId',
        description: 'Delete message (sender only)',
        category: 'Moderation',
        requiresAuth: true,
        parameters: ['messageId'],
      },
      {
        method: 'GET',
        path: '/admin/chats',
        description: 'Get all chats for moderation (admin only)',
        category: 'Admin',
        requiresAuth: true,
        parameters: ['page', 'status'],
      },
    ],
  },
  wallet: {
    title: 'Wallet & Payments',
    description: 'Comprehensive payment processing with dynamic fee structure',
    baseUrl: '/api/wallet',
    icon: FiCreditCard,
    color: 'from-emerald-500 to-teal-500',
    totalEndpoints: 8,
    routes: [
      {
        method: 'GET',
        path: '/balance',
        description: 'Get current wallet balance and pending amounts',
        category: 'Balance',
        requiresAuth: true,
        parameters: [],
      },
      {
        method: 'GET',
        path: '/transactions',
        description: 'Get transaction history with filtering',
        category: 'History',
        requiresAuth: true,
        parameters: ['type', 'dateRange', 'page'],
      },
      {
        method: 'POST',
        path: '/withdraw',
        description: 'Request funds withdrawal to bank account',
        category: 'Withdrawal',
        requiresAuth: true,
        parameters: ['amount', 'bankDetails'],
      },
      {
        method: 'GET',
        path: '/withdrawals',
        description: 'Get withdrawal requests history',
        category: 'Withdrawal',
        requiresAuth: true,
        parameters: ['status', 'page'],
      },
      {
        method: 'GET',
        path: '/admin/dashboard',
        description: 'Payment dashboard with analytics (admin only)',
        category: 'Admin',
        requiresAuth: true,
        parameters: ['period'],
      },
      {
        method: 'GET',
        path: '/admin/payments',
        description: 'All payments overview (admin only)',
        category: 'Admin',
        requiresAuth: true,
        parameters: ['status', 'page'],
      },
      {
        method: 'GET',
        path: '/admin/withdrawals',
        description: 'All withdrawal requests (admin only)',
        category: 'Admin',
        requiresAuth: true,
        parameters: ['status', 'page'],
      },
      {
        method: 'POST',
        path: '/admin/withdrawals/:id/process',
        description: 'Process withdrawal request (admin only)',
        category: 'Admin',
        requiresAuth: true,
        parameters: ['id', 'action', 'notes'],
      },
    ],
  },
  admin: {
    title: 'Admin Panel',
    description:
      'Administrative tools for user management and system oversight',
    baseUrl: '/api/admin',
    icon: FiSettings,
    color: 'from-gray-600 to-slate-600',
    totalEndpoints: 12,
    routes: [
      {
        method: 'POST',
        path: '/create-admin',
        description: 'Create new admin user account',
        category: 'User Management',
        requiresAuth: true,
        parameters: ['email', 'password', 'permissions'],
      },
      {
        method: 'POST',
        path: '/users/:id/ban',
        description: 'Ban user from platform',
        category: 'Moderation',
        requiresAuth: true,
        parameters: ['id', 'reason', 'duration'],
      },
      {
        method: 'POST',
        path: '/users/:id/unban',
        description: 'Remove user ban',
        category: 'Moderation',
        requiresAuth: true,
        parameters: ['id'],
      },
      {
        method: 'GET',
        path: '/users',
        description: 'Get all users with advanced filtering',
        category: 'User Management',
        requiresAuth: true,
        parameters: ['role', 'status', 'page'],
      },
      {
        method: 'GET',
        path: '/verifications/pending',
        description: 'Get pending craftsman verifications',
        category: 'Verification',
        requiresAuth: true,
        parameters: ['page'],
      },
      {
        method: 'POST',
        path: '/verifications/:id/approve',
        description: 'Approve craftsman verification',
        category: 'Verification',
        requiresAuth: true,
        parameters: ['id', 'notes'],
      },
      {
        method: 'POST',
        path: '/verifications/:id/reject',
        description: 'Reject craftsman verification',
        category: 'Verification',
        requiresAuth: true,
        parameters: ['id', 'reason'],
      },
      {
        method: 'GET',
        path: '/analytics',
        description: 'System analytics and statistics',
        category: 'Analytics',
        requiresAuth: true,
        parameters: ['period', 'metrics'],
      },
      {
        method: 'GET',
        path: '/logs',
        description: 'System action logs (super admin only)',
        category: 'Monitoring',
        requiresAuth: true,
        parameters: ['level', 'dateRange', 'user'],
      },
      {
        method: 'POST',
        path: '/services',
        description: 'Create new service category',
        category: 'Services',
        requiresAuth: true,
        parameters: ['name', 'description', 'icon'],
      },
      {
        method: 'PATCH',
        path: '/services/:id',
        description: 'Update service category',
        category: 'Services',
        requiresAuth: true,
        parameters: ['id', 'name', 'description'],
      },
      {
        method: 'DELETE',
        path: '/services/:id',
        description: 'Delete service category',
        category: 'Services',
        requiresAuth: true,
        parameters: ['id'],
      },
    ],
  },
};

export default apiRoutes;
